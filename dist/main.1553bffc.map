{"version":3,"sources":["YouTubeFinder/main.js"],"names":["CLIENT_ID","DISCOVERY_DOCS","SCOPES","authorizeButton","document","getElementById","signoutButton","content","channelForm","channelInput","videoContainer","defaultChannel","addEventListener","e","preventDefault","channel","value","getChannel","handleClientLoad","gapi","load","initClient","client","init","discoveryDocs","clientId","scope","then","auth2","getAuthInstance","isSignedIn","listen","updateSigninStatus","get","onclick","handleAuthClick","handleSignoutClick","style","display","signIn","signOut","showChannelData","data","channelData","innerHTML","youtube","channels","list","part","forUsername","console","log","response","result","items","output","snippet","title","id","numberWithCommas","statistics","subscriberCount","viewCount","videoCount","description","customUrl","playlistId","contentDetails","relatedPlaylists","uploads","requestVideoPlaylist","catch","alert","x","toString","replace","requestOptions","maxResults","request","playlistItems","execute","forEach","videoId","item","resourceId"],"mappings":"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","file":"main.1553bffc.map","sourceRoot":"../..","sourcesContent":["// Options\n\nconst CLIENT_ID = '626765735312-q8lb33vvggm7rsm66es6trptqg7t2qqj.apps.googleusercontent.com';\nconst DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/youtube/v3/rest\"];\nconst SCOPES = 'https://www.googleapis.com/auth/youtube.readonly';\n\nconst authorizeButton = document.getElementById('authorize-button');\nconst signoutButton = document.getElementById('signout-button');\nconst content = document.getElementById('content');\nconst channelForm = document.getElementById('channel-form');\nconst channelInput = document.getElementById('channel-input');\nconst videoContainer = document.getElementById('video-container');\n\nconst defaultChannel = 'techguyweb';\n\n// Form submit and change channel\nchannelForm.addEventListener('submit', e => {\n    e.preventDefault();\n\n    const channel = channelInput.value;\n\n    getChannel(channel);\n});\n\n// Load auth2 library\nfunction handleClientLoad () {\n    gapi.load('client:auth2', initClient);\n}\n\n// Init API client library and set up sign in listeners\nfunction initClient(){\n    gapi.client.init({\n        discoveryDocs: DISCOVERY_DOCS,\n        clientId: CLIENT_ID,\n        scope: SCOPES\n    }).then(() => {\n        // Listen for sign in state changes\n        gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);\n        // Handle initial sign in state\n        updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n        authorizeButton.onclick = handleAuthClick;\n        signoutButton.onclick = handleSignoutClick;\n    });\n}\n\n// Update UI sign in state changes\n\nfunction updateSigninStatus (isSignedIn) {\n    if (isSignedIn) {\n        authorizeButton.style.display = 'none';\n        signoutButton.style.display = 'block';\n        content.style.display = 'block';\n        videoContainer.style.display = 'block';\n        getChannel(defaultChannel);\n    } else {\n        authorizeButton.style.display = 'block';\n        signoutButton.style.display = 'none';\n        content.style.display = 'none';\n        videoContainer.style.display = 'none';\n    };\n};\n\n// Handle login \nfunction handleAuthClick () {\n    gapi.auth2.getAuthInstance().signIn();\n};\n\n// Handle logout \nfunction handleSignoutClick () {\n    gapi.auth2.getAuthInstance().signOut();\n};\n\n//Display channel data\nfunction showChannelData(data){\n    const channelData = document.getElementById('channel-data');\n    channelData.innerHTML = data;\n}\n\n// Get channel from API\nfunction getChannel (channel) {\n    gapi.client.youtube.channels.list({\n        part: 'snippet,contentDetails,statistics',\n        forUsername: channel\n    })\n    .then(response => {\n        console.log(response);\n        const channel = response.result.items[0];\n\n        const output = `\n            <ul class=\"collection\">\n            <li class=\"collection-item\">Title: ${channel.snippet.title}</li>\n            <li class=\"collection-item\">ID: ${channel.id}</li>\n            <li class=\"collection-item\">Subscribers: ${numberWithCommas(channel.statistics.subscriberCount)}</li>\n            <li class=\"collection-item\">Views: ${numberWithCommas(channel.statistics.viewCount)}</li>\n            <li class=\"collection-item\">Videos: ${numberWithCommas(channel.statistics.videoCount)}</li>\n            </ul>\n            <p>${channel.snippet.description}</p>\n            <hr>\n            <a class=\"btn grey darken-2\" target=\"_blank\" href=\"https://youtube.com/${channel.snippet.customUrl}\">Visit Channel</a>\n        `;\n        showChannelData(output);\n\n        const playlistId = channel.contentDetails.relatedPlaylists.uploads;\n        requestVideoPlaylist(playlistId);\n    })\n    .catch(err => alert('No channel by that name'));\n};\n\n// Add commas to number\nfunction numberWithCommas (x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  function requestVideoPlaylist (playlistId) {\n    const requestOptions = {\n        playlistId: playlistId,\n        part: 'snippet',\n        maxResults: 10\n    }\n\n    const request = gapi.client.youtube.playlistItems.list(requestOptions);\n    request.execute(response => {\n        const playlistItems = response.result.items;\n        if (playlistItems) {\n            let output = '<br><h4 class=\"center-align\">Latest Videos</h4>';\n            // Loop through videos and append output\n            playlistItems.forEach(item => {\n                const videoId = item.snippet.resourceId.videoId;\n\n                output += `\n                    <div class=\"col s3\">\n                    <iframe width=\"100%\" height=\"auto\" src=\"https://www.youtube.com/embed/${videoId}\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>\n                    </div>\n                `;\n            });\n            // Output videos\n            videoContainer.innerHTML = output;\n        } else {\n            videoContainer.innerHTML = 'No Uploaded Videos';\n        }\n    });\n  }"]}